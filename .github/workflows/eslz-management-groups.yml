# This is a basic workflow to help you get started with Actions

name: eslz management group

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: 
      - master
      - main 
      - dev
    paths:
      - .github/workflows/eslz-management-groups.yml
      - eslz/management-groups/*
    
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # "lint" Job ---> will check for (1) syntax errors (2) valid Azure resource definitions, and (3) code quality.
  lint:
    # The type of runner a single job will run on.
    runs-on: ubuntu-latest
    # Steps represents a sequence of tasks that will be executed as part of the job.
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
    - uses: actions/checkout@v2
    - name: 'Lint and Build Bicep'
      # Runs a single command using the runners shell.
      run: az bicep build --file ./eslz/management-groups/bicep/main.bicep

  # "validate" Job ---> will check for (1) Are the names that you've specified for your Bicep resources valid? (2) Are the names that you've specified for your Bicep resources already taken? (3) Are the regions that you're deploying your resources to valid?
  # This requires communication with Azure but it does not actually deploy any resources.
  validate: 
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
    - uses: actions/checkout@v2
    
    - uses: azure/login@v1
      name: 'Login to Azure'
      with: 
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ secrets.AZURE_ENVIRONMENT }}
          enable-AzPSSession: false
        
    - name: 'Set Azure Subscription'
      run: az account set --subscription ${{ secrets.AZURE_MGMTSUBSCRIPTIONID }}

    - uses: Azure/cli@v1
      name: 'Run preflight validation'
      with:
        # Runs a command with multiple lines
        inlineScript: |
            az deployment tenant validate \
              --template-file ./eslz/management-groups/bicep/main.bicep \
              --parameters ./eslz/management-groups/main.parameters.json \
              --location ${{ secrets.AZURE_LOCATION }}

  # "preview" job ---> will verify what exactly will be created, updated, and deleted. 
  # Verify the outut of what-if operation and determine whether to continue on to the deployment or not - This step is typically involves human reviewing the output from what-if command and making decision.
  preview:
      runs-on: ubuntu-latest
      needs: [validate]
      steps:
      - uses: actions/checkout@v2
      
      - uses: azure/login@v1
        name: 'Login to Azure'
        with:
         creds: ${{ secrets.AZURE_CREDENTIALS }}
         environment: ${{ secrets.AZURE_ENVIRONMENT }}
         enable-AzPSSession: false
        
      - uses: Azure/cli@v1
        name: 'Set Azure Subscription'
        with:
         inlineScript: |
              az account set \
                --subscription ${{ secrets.AZURE_MGMTSUBSCRIPTIONID }}
                
      - uses: Azure/cli@v1
        name: 'Run what-if'
        with:
          inlineScript: |
              az deployment tenant what-if \
                --template-file ./eslz/management-groups/bicep/main.bicep \
                --parameters ./eslz/management-groups/main.parameters.json \
                --location ${{ secrets.AZURE_LOCATION }}
                

  deploy:
      runs-on: ubuntu-latest
      needs: [preview]
      environment: Production
      steps:
      - uses: actions/checkout@v2
      
      - uses: azure/login@v1
        name: 'Login to Azure'
        with:
         creds: ${{ secrets.AZURE_CREDENTIALS }}
         environment: ${{ secrets.AZURE_ENVIRONMENT }}
         enable-AzPSSession: false
        
      - uses: Azure/cli@v1
        name: 'Set Azure Subscription'
        with:
         inlineScript: |
              az account set \
                --subscription ${{ secrets.AZURE_MGMTSUBSCRIPTIONID }}
                
      - uses: Azure/cli@v1
        name: 'Deploy'
        with:
          inlineScript: |
              az deployment tenant create \
                --template-file ./eslz/management-groups/bicep/main.bicep \
                --parameters ./eslz/management-groups/main.parameters.json \
                --location ${{ secrets.AZURE_LOCATION }}
