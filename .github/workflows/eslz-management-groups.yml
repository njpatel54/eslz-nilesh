# This is a basic workflow to help you get started with Actions

name: eslz management group

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: 
      - master
      - main 
      - dev
    paths:
      - entlz-management-groups.yml
      - entlz/management-groups/*
    
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: 'Lint and Build Bicep'
      run: az bicep build --file ./eslz/management-groups/bicep/main.bicep

validate: 
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
    - uses: actions/checkout@v2
    - uses: azure/login@v1
      name: Login to Azure
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        environment: 'AzureUSGovernment'
        enable-AzPSSession: false

    - uses: azure/arm-deploy@v1
      name: Run preflight validation
      with:
        deploymentName: ${{ github.run_number }}
        scope: subscription
        subscriptionId: ${{ secrets.ARM_SUBSCRIPTION }}
        template: ./main.bicep
        # parameters: environmentType=${{ env.ENVIRONMENT_TYPE }}
        region: usgovvirginia
        failOnStdErr: false
        deploymentMode: Validate
        
        
  test-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: 'Test Deployment to Dev Tenant'
    inputs:
      targetType: filePath
      filePath: $(System.DefaultWorkingDirectory)\entlz\management-groups\test-arm.ps1
      arguments: >
        -tenantid $(tenantid) 
        -mgmtsubid $(mgmtsubid) 
        -location $(location) 
        -appid $(appid) 
        -cloudmetadataurl $(cloudmetadataurl) 
        -environment $(environment) 
        -appsecret $(appsecret) 
        -templateparameterfile "build/main.parameters.$(releasetarget).json"
        -templatepath "build/main.json"
        -outfile "build/test-summary-dev.txt"
