# This is a basic workflow to help you get started with Actions

name: eslz - virtual networking

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
  # branches: 
  #    - main 
  # paths:
  #   - .github/workflows/eslz-vnet.yml
      
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  deploy:
    runs-on: ubuntu-latest
    #needs: [preview]
    environment: Production
    steps:
    - uses: actions/checkout@v2
    
    - uses: azure/login@v1
      name: 'Login to Azure'
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        environment: ${{ secrets.AZURE_ENVIRONMENT }}
        enable-AzPSSession: false
      
    - name: 'Set Azure Subscription'
      run: az account set --subscription ${{ secrets.AZURE_CONNSUBSCRIPTIONID }}
              
    - uses: Azure/cli@v1
      name: 'Deploy - Hub-Spoke Networking'
      with:
        inlineScript: |
            az deployment group create \
              --name 'Deploy-Hub-Spoke-Networking' \
              --resource-group 'rg-ccs-prod-usva-vnet' \
              --template-file ./eslz/network/deploy.bicep \
              --parameters ./eslz/network/virtualNetworks/.parameters/hub.parameters.json \
              --parameters ./eslz/network/virtualNetworks/.parameters/spoke.parameters.json \
              --parameters diagnosticWorkspaceId=${{ secrets.AZURE_LAWORKSPACEID }} \
              --parameters diagnosticStorageAccountId=${{ secrets.AZURE_DIAGSTORAGEACCTID }} \
              --parameters diagnosticEventHubName=${{ secrets.AZURE_DAIGEHNAME }} \
              --parameters diagnosticEventHubAuthorizationRuleId=${{ secrets.AZURE_DAIGEHAUTHRULEID }}