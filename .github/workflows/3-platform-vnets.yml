name: 3 - platform vnets

on:
  #push:
  # branches: 
  #    - main 
  # paths:
  #   - .github/workflows/3-platform-vnets.yml
      
  # pull_request:
  #  branches: [ main ]

  workflow_dispatch:

jobs:

  validate: 
    runs-on: ubuntu-latest
    #needs: [lint]
    steps:
    - uses: actions/checkout@v2
    
    - uses: azure/login@v1
      name: 'Login to Azure'
      with: 
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ secrets.AZURE_ENVIRONMENT }}
          enable-AzPSSession: false
        
    - name: 'Set Azure Subscription'
      run: az account set --subscription ${{ secrets.AZURE_MGMTSUBSCRIPTIONID }}

    - uses: Azure/cli@v1
      name: 'Run preflight validation'
      with:
        inlineScript: |
          az group create --subscription ${{ secrets.AZURE_MGMTSUBSCRIPTIONID }} --location ${{ secrets.AZURE_LOCATION }} --name ${{ secrets.AZURE_VNETRG }}
          az group create --subscription ${{ secrets.AZURE_CONNSUBSCRIPTIONID }} --location ${{ secrets.AZURE_LOCATION }} --name ${{ secrets.AZURE_VNETRG }}
          az group create --subscription ${{ secrets.AZURE_IDENSUBSCRIPTIONID }} --location ${{ secrets.AZURE_LOCATION }} --name ${{ secrets.AZURE_VNETRG }}
          az group create --subscription ${{ secrets.AZURE_SSVCSUBSCRIPTIONID }} --location ${{ secrets.AZURE_LOCATION }} --name ${{ secrets.AZURE_VNETRG }}
          az deployment group validate \
            --name 'Deploy-Hub-Spoke-Networking' \
            --resource-group ${{ secrets.AZURE_VNETRG }} \
            --template-file ./eslz/network/deploy.bicep \
            --parameters ./eslz/network/virtualNetworks/.parameters/hub.parameters.json \
            --parameters ./eslz/network/virtualNetworks/.parameters/spoke.parameters.json \
            --parameters diagnosticWorkspaceId=${{ secrets.AZURE_LAWORKSPACEID }} \
                         diagnosticStorageAccountId=${{ secrets.AZURE_DIAGSTORAGEACCTID }} \
                         diagnosticEventHubName=${{ secrets.AZURE_DIAGEHNAME }} \
                         diagnosticEventHubAuthorizationRuleId=${{ secrets.AZURE_DIAGEHAUTHRULEID }}
