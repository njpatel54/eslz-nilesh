az deployment mg create `
	--name "PolicyAssignment-MG-Scope" `
	--location "USGovVirginia" `
	--template-file "C:\Users\nileshpa\OneDrive - Microsoft\Repos\eslz-nilesh\eslz\managementServices\policy\old\mg.deploy.bicep" `
	--parameters "C:\Temp\test\new\mg.parameters.json" `
	--management-group-id "mg-A2g"

az deployment sub create `
	--name "PolicyAssignment-SUB-Scope" `
	--location "USGovVirginia" `
	--template-file "C:\Users\nileshpa\OneDrive - Microsoft\Repos\eslz-nilesh\eslz\managementServices\policy\old\sub.deploy.bicep" `
	--parameters "C:\Temp\test\new\sub.parameters.json"

az deployment group create `
	--name "PolicyAssignment-RG-Scope" `
	--resource-group "rg-ccs-prod-usva-ui2t" `
	--template-file "C:\Users\nileshpa\OneDrive - Microsoft\Repos\eslz-nilesh\eslz\managementServices\policy\old\rg.deploy.bicep" `
	--parameters "C:\Temp\test\new\rg.parameters.json"

az deployment mg create `
	--name "Policy-Assignment-MG-Scope" `
	--location "USGovVirginia" `
	--template-file "C:\Users\nileshpa\OneDrive - Microsoft\Repos\eslz-nilesh\eslz\managementServices\policy\customPolicyAssignments.bicep" `
	--management-group-id "mg-A2g" `
	--parameters location="USGovVirginia" targetMgId="mg-A2g" diagnosticWorkspaceId="/subscriptions/aa2a513a-47e2-4a0d-8d39-0a3d5dd0f889/resourcegroups/rg-ccs-prod-usva-siem/providers/microsoft.operationalinsights/workspaces/log-ccs-prod-usva-siem"

=======
Tested 
=======

az deployment mg create `
  --template-file "C:\Users\nileshpa\OneDrive - Microsoft\Repos\eslz-nilesh\eslz\managementServices\customPolicyDefinitions.bicep" `
  --parameters parTargetManagementGroupId="mg-A2g" `
  --location USGovVirginia `
  --management-group-id "mg-A2g"

az deployment mg create `
	--name "Custom-Policy-Definitions-MG-Scope" `
	--location "USGovVirginia" `
	--template-file "C:\Users\nileshpa\OneDrive - Microsoft\Repos\eslz-nilesh\eslz\managementServices\customPolicyDefinition.bicep" `
	--management-group-id "mg-A2g"

az deployment mg create `
	--name "Policy-Assignment-MG-Scope" `
	--location "USGovVirginia" `
	--template-file "C:\Users\nileshpa\OneDrive - Microsoft\Repos\eslz-nilesh\eslz\managementServices\mg.policy.assignment.bicep" `
	--parameters "C:\Users\nileshpa\OneDrive - Microsoft\Repos\eslz-nilesh\eslz\managementServices\.parameters\mg.parameters.json" `
	--management-group-id "mg-A2g"


========================
NIST SP 800-171 Rev. 2
========================

Policy Initiative Name - NIST SP 800-171 Rev. 2
Policy Definition ID - /providers/Microsoft.Authorization/policySetDefinitions/03055927-78bd-4236-86c0-f36125a10dc9

List of users that should be excluded from Windows virtual machines' Administrators group
MembersToExclude - test@rajdisha.onmicrosoft.us

List of users that should be included in Windows virtual machines' Administrators group
MembersToInclude - admin@rajdisha.onmicrosoft.us

Log Analytics workspace ID for virtual machine agent reporting
logAnalyticsWorkspaceId - /subscriptions/aa2a513a-47e2-4a0d-8d39-0a3d5dd0f889/resourcegroups/rg-ccs-prod-usva-siem/providers/microsoft.operationalinsights/workspaces/log-ccs-prod-usva-wcov

Role Assignment - Contributor role 
"/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"



================================================================================================================================
================================================================================================================================
=					=====================================================================									   =
=					# Retrieve ESLZ Policies from ESLZ deployment (Azure US Government) #									   =
=					=====================================================================									   =
=																															   =
=	Location - https://github.com/Azure/Enterprise-Scale/tree/main/eslzArm/managementGroupTemplates/policyDefinitions/gov/	   =	
=	File Name - fairfaxPolicies.json																						   =
================================================================================================================================
================================================================================================================================
=======
Step 1
=======
Invoke-WebRequest -Uri "https://raw.githubusercontent.com/Azure/Enterprise-Scale/main/eslzArm/managementGroupTemplates/policyDefinitions/gov/fairfaxPolicies.json" -OutFile "eslz\managementServices\policy\fairfaxPolicies.json"

=======
Step 2
=======
# Policy Definitions 
##################################################################################################################################
# Iterating over "policyDefinitions" variable from "fairfaxPolicies.json" file and save indidual json file per policy definition #
# Replacing following ...																										 #
# 			Old Values					New Values																				 #
#           ----------					----------																				 #		
#			"[[parameters"				"[parameters"																		     #
#  			"[[field" 					"[field"																				 #
##################################################################################################################################

$oldParams = "[[parameters"
$newParams = "[parameters"
$oldfield = "[[field"
$newfield = "[field"

$fairfax = Get-Content eslz\managementServices\policy\fairfaxPolicies.json | ConvertFrom-Json -Depth 100
$fairfax.variables.policies.policyDefinitions.Count
$policyDefinitions = $fairfax.variables.policies.policyDefinitions 

foreach($policyDefinition in $policyDefinitions){
    $fielname = "policy-def-" + $policyDefinition.name
    $filepath = "eslz\managementServices\policy\policyDefinitions\" + "$fielname.json"
    $policyDefinition | ConvertTo-Json -Depth 100 > $filepath
    $content = Get-Content $filepath
    $content.Replace($oldParams,$newParams).Replace($oldfield,$newfield) | Set-Content -path $filepath
}

=======
Step 3
=======
# PolicySet Definitions 

########################################################################################################################################
# Iterating over "policySetDefinitions" variable from "fairfaxPolicies.json" file and save indidual json file per policySet definition #
# Replacing following ...																										       #
# 			Old Values							New Values																			   #
#           ----------					 		----------																			   #		
#			"[[parameters"						"[parameters"																		   #
#  			"[concat(variables('scope'), '"		"`${targetMgResourceId}"															   #
#  			"')]`","							"`","																			       #
########################################################################################################################################


$oldParams = "[[parameters"
$newParams = "[parameters"
$oldConcat = "[concat(variables('scope'), '"
$newConcat = "`${targetMgResourceId}"
$oldBracket = "')]`","
$newBracket = "`","
$fairfax = Get-Content .\eslz\managementServices\policy\fairfaxPolicies.json | ConvertFrom-Json -Depth 100
$fairfax.variables.initiatives.policySetDefinitions.Count
$policySetDefinitions = $fairfax.variables.initiatives.policySetDefinitions

foreach($policySetDefinition in $policySetDefinitions){
    $fielname = "policy-defset-" + $policySetDefinition.name
    $filepath = "eslz\managementServices\policy\policySetDefinitions\" + "$fielname.json"
    $policySetDefinition | ConvertTo-Json -Depth 100 > $filepath
    $content = Get-Content $filepath
    $content.Replace($oldParams,$newParams).Replace($oldConcat,$newConcat).Replace($oldBracket,$newBracket) | Set-Content -path $filepath
}

##########################
$oldConcat = "[concat(variables('scope'), '"
$newConcat = "`${targetMgResourceId}"
$oldBracket = "')]`","
$newBracket = "`","
$fairfax = Get-Content .\eslz\managementServices\policy\fairfaxPolicies.json | ConvertFrom-Json -Depth 100
$fairfax.variables.initiatives.policySetDefinitions.Count
$policySetDefinitions = $fairfax.variables.initiatives.policySetDefinitions

foreach($policySetDefinition in $policySetDefinitions){
    $fielname = "policy-defset-" + $policySetDefinition.name
    $filepath = "eslz\managementServices\policy\policySetDefinitions\" + "$fielname.json"
    $policySetDefinition | ConvertTo-Json -Depth 100 > $filepath
    $content = Get-Content $filepath
    $content.Replace($oldConcat,$newConcat).Replace($oldBracket,$newBracket) | Set-Content -path $filepath
}