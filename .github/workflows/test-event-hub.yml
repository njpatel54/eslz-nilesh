# This is a basic workflow to help you get started with Actions

name: test - event hub

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
   branches: 
      - main 
   paths:
     - .github/workflows/test-event-hub.yml
      
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  la:
    runs-on: ubuntu-latest
    environment: Production
    steps:
    - uses: actions/checkout@v2
    
    - uses: azure/login@v1
      name: 'Login to Azure'
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        environment: ${{ secrets.AZURE_ENVIRONMENT }}
        enable-AzPSSession: false
      
    - name: 'Set Azure Subscription'
      run: az account set --subscription ${{ secrets.AZURE_CONNSUBSCRIPTIONID }}
              
    - id: deployla
      uses: Azure/cli@v1
      name: 'Deploy - Log Analytics Workspace'
      with:
        inlineScript: |
            set -e
            deploymentOutput=$(az deployment group create \
              --name 'Deploy-Log-Analytics-Workspace' \
              --resource-group 'rg-ccs-prod-usva-vnet' \
              --template-file ./test/workspaces/deploy.bicep \
              --parameters ./test/workspaces/.parameters/parameters.json)
            resoruceId=$(echo $deploymentOutput | jq -r '.properties.outputs.resourceId.value')
            resoruceId1=$(az deployment group show -g 'rg-ccs-prod-usva-vnet' -n 'Deploy-Log-Analytics-Workspace' --query properties.outputs | jq -r '.resourceId.value')
            output=$(az deployment group show -g 'rg-ccs-prod-usva-vnet' -n 'Deploy-Log-Analytics-Workspace' --query properties.outputs.resourceId.value -o tsv)
            echo "##vso[task.setvariable variable=resoruceId;isOutput=true]$resoruceId"
            echo "##vso[task.setvariable variable=resoruceId1;isOutput=true]$resoruceId1"
            echo $output

  ns:
    runs-on: ubuntu-latest
    environment: Production
    steps:
    - uses: actions/checkout@v2
    
    - uses: azure/login@v1
      name: 'Login to Azure'
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        environment: ${{ secrets.AZURE_ENVIRONMENT }}
        enable-AzPSSession: false
      
    - name: 'Set Azure Subscription'
      run: az account set --subscription ${{ secrets.AZURE_CONNSUBSCRIPTIONID }}
              
    - uses: Azure/cli@v1
      name: 'Deploy - Event Hub'
      with:
        inlineScript: |
            az deployment group create \
              --name 'Deploy-Event-Hub' \
              --resource-group 'rg-ccs-prod-usva-vnet' \
              --template-file ./test/namespaces/deploy.bicep \
              --parameters ./test/namespaces/.parameters/parameters.json